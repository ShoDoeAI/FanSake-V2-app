apiVersion: apps/v1
kind: Deployment
metadata:
  name: musicconnect-frontend
  namespace: musicconnect
  labels:
    app: musicconnect-frontend
    version: v1
    app.kubernetes.io/name: musicconnect-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: musicconnect
spec:
  replicas: 3
  selector:
    matchLabels:
      app: musicconnect-frontend
      version: v1
  template:
    metadata:
      labels:
        app: musicconnect-frontend
        version: v1
        app.kubernetes.io/name: musicconnect-frontend
        app.kubernetes.io/component: frontend
        app.kubernetes.io/part-of: musicconnect
    spec:
      serviceAccountName: musicconnect-frontend
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        fsGroup: 101
      containers:
      - name: frontend
        image: musicconnect/frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        env:
        - name: REACT_APP_API_URL
          value: "https://api.musicconnect.com"
        - name: REACT_APP_STRIPE_PUBLIC_KEY
          valueFrom:
            configMapKeyRef:
              name: musicconnect-frontend-config
              key: stripe-public-key
        - name: REACT_APP_CLOUDFRONT_URL
          value: "https://cdn.musicconnect.com"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: cache
          mountPath: /var/cache/nginx
        - name: tmp
          mountPath: /tmp
        - name: run
          mountPath: /var/run
      volumes:
      - name: cache
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: run
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - musicconnect-frontend
              topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: musicconnect-frontend
---
apiVersion: v1
kind: Service
metadata:
  name: musicconnect-frontend
  namespace: musicconnect
  labels:
    app: musicconnect-frontend
    app.kubernetes.io/name: musicconnect-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: musicconnect
spec:
  type: ClusterIP
  selector:
    app: musicconnect-frontend
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: musicconnect-frontend
  namespace: musicconnect
  labels:
    app: musicconnect-frontend